frc::XboxController m_driveController{0};
frc::GenericHID m_buttons            {1};
frc::XboxController m_coController   {2};

Driver Controls


CoController Controls - button, xbox







  if(m_buttons.GetRawButton(1))//elevator L1
  {
    m_Elevator.ChangeState( m_Elevator.ElevatorCoralL1 );
  }
  else if(m_buttons.GetRawButton(2))//elevator L2
  {
    m_Elevator.ChangeState( m_Elevator.ElevatorCoralL2 );
  }
  else if(m_buttons.GetRawButton(3))//elevator L3
  {
    m_Elevator.ChangeState( m_Elevator.ElevatorCoralL3 );
  }
  else if(m_buttons.GetRawButton(4))//elevator L4
  {
    m_Elevator.ChangeState( m_Elevator.ElevatorCoralL4 );
  }
  else
  {
    m_Elevator.ChangeState( m_Elevator.ElevatorStop );
  }




#if 0
 if(m_buttons.GetRawButton(1))//coral up
  {
    m_Claw.ChangeState( m_Claw.AngleUp, m_Claw.intakeStop );
  }
  else if(m_buttons.GetRawButton(2))//coral down
  {
    m_Claw.ChangeState( m_Claw.AngleDn, m_Claw.intakeStop );
  }
  else
  {
    m_Claw.ChangeState( m_Claw.AngleStop, m_Claw.intakeStop );
  }
#endif

#if 0
  if(m_buttons.GetRawButton(1))//intake
  {
    m_Claw.ChangeState( m_Claw.AngleStop, m_Claw.intakeIntake );
  }
  else if(m_buttons.GetRawButton(2))//intake reverse
  {
    m_Claw.ChangeState( m_Claw.AngleStop, m_Claw.intakeReverse );
  }
  else
  {
    m_Claw.ChangeState( m_Claw.AngleStop, m_Claw.intakeStop );
  }
#endif

#if 0
  if(m_buttons.GetRawButton(1))//winch in
  {
    m_Climber.ChangeState( m_Climber.ClimberWinchInManual, m_Climber.GrabMaintain );
  }
  else if(m_buttons.GetRawButton(4))//winch out
  {
    m_Climber.ChangeState( m_Climber.ClimberWinchOutManual, m_Climber.GrabMaintain );
  }
  else
  {
    m_Climber.ChangeState( m_Climber.ClimberWinchStop, m_Climber.GrabMaintain );
  }

  if(m_buttons.GetRawButton(2))//grab
  {
    m_Climber.ChangeState( m_Climber.ClimberWinchMaintain, m_Climber.GrabHorizontal );
  }
  else if(m_buttons.GetRawButton(5))//release
  {
    m_Climber.ChangeState( m_Climber.ClimberWinchMaintain, m_Climber.GrabVertical );
  }
  else
  {
    m_Climber.ChangeState( m_Climber.ClimberWinchMaintain, m_Climber.GrabMaintain); // don't want to stop grabber state here
  }

  if(m_buttons.GetRawButton(7))//calibrate climber
  {
    m_Climber.ChangeState( m_Climber.ClimberWinchCalibrate, m_Climber.GrabMaintain );
  }
#endif




height[71 85 114 169]
setting value [20 30 50 90]
value=0.714*height-30.834